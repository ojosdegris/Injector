0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish', '.' ]
2 info using npm@1.1.69
3 info using node@v0.8.16
4 verbose publish [ '.' ]
5 verbose read json /Users/scottcorgan/Projects/nodejs/Injector/package.json
6 verbose cache add [ '.', null ]
7 silly cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { pathname: '.', path: '.', href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/scottcorgan/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/tmp.tgz
14 verbose folder .
15 info prepublish injector@0.1.8
16 silly lockFile bc1de072-24254-0-7872536298818886-tmp-tgz /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/tmp.tgz
17 verbose lock /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/tmp.tgz /Users/scottcorgan/.npm/bc1de072-24254-0-7872536298818886-tmp-tgz.lock
18 silly lockFile bc1de072-24254-0-7872536298818886-tmp-tgz /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/tmp.tgz
19 verbose tar unpack /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/tmp.tgz
20 silly lockFile f33a8fc2-24254-0-7872536298818886-package /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package
21 verbose lock /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package /Users/scottcorgan/.npm/f33a8fc2-24254-0-7872536298818886-package.lock
22 silly gunzTarPerm modes [ '755', '644' ]
23 silly gunzTarPerm extractEntry package.json
24 silly gunzTarPerm extractEntry README.md
25 silly gunzTarPerm extractEntry injector.js
26 silly gunzTarPerm extractEntry test/index.js
27 silly gunzTarPerm extractEntry test/modules/module1.js
28 silly gunzTarPerm extractEntry test/modules/models/model1.js
29 verbose read json /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package/package.json
30 silly lockFile f33a8fc2-24254-0-7872536298818886-package /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package
31 verbose from cache /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package/package.json
32 verbose tar pack [ '/Users/scottcorgan/.npm/injector/0.1.8/package.tgz',
32 verbose tar pack   '/var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package' ]
33 verbose tarball /Users/scottcorgan/.npm/injector/0.1.8/package.tgz
34 verbose folder /var/folders/k9/29gcmj2d10j44khjt4phcfr80000gn/T/npm-90203/1360442924254-0.7872536298818886/package
35 silly lockFile 216e79d5-n-npm-injector-0-1-8-package-tgz /Users/scottcorgan/.npm/injector/0.1.8/package.tgz
36 verbose lock /Users/scottcorgan/.npm/injector/0.1.8/package.tgz /Users/scottcorgan/.npm/216e79d5-n-npm-injector-0-1-8-package-tgz.lock
37 silly lockFile 216e79d5-n-npm-injector-0-1-8-package-tgz /Users/scottcorgan/.npm/injector/0.1.8/package.tgz
38 silly lockFile f9b55071-organ-npm-injector-0-1-8-package /Users/scottcorgan/.npm/injector/0.1.8/package
39 verbose lock /Users/scottcorgan/.npm/injector/0.1.8/package /Users/scottcorgan/.npm/f9b55071-organ-npm-injector-0-1-8-package.lock
40 silly lockFile f9b55071-organ-npm-injector-0-1-8-package /Users/scottcorgan/.npm/injector/0.1.8/package
41 verbose tar unpack /Users/scottcorgan/.npm/injector/0.1.8/package.tgz
42 silly lockFile f9b55071-organ-npm-injector-0-1-8-package /Users/scottcorgan/.npm/injector/0.1.8/package
43 verbose lock /Users/scottcorgan/.npm/injector/0.1.8/package /Users/scottcorgan/.npm/f9b55071-organ-npm-injector-0-1-8-package.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 silly gunzTarPerm extractEntry package.json
46 silly gunzTarPerm extractEntry README.md
47 silly gunzTarPerm extractEntry injector.js
48 silly gunzTarPerm extractEntry test/index.js
49 silly gunzTarPerm extractEntry test/modules/module1.js
50 silly gunzTarPerm extractEntry test/modules/models/model1.js
51 verbose read json /Users/scottcorgan/.npm/injector/0.1.8/package/package.json
52 silly lockFile f9b55071-organ-npm-injector-0-1-8-package /Users/scottcorgan/.npm/injector/0.1.8/package
53 silly shasum updated bytes 3439
54 info shasum 4c8232fafd5d2aac56f361e2804d26c6be269f7e
54 info shasum /Users/scottcorgan/.npm/injector/0.1.8/package.tgz
55 verbose from cache /Users/scottcorgan/.npm/injector/0.1.8/package/package.json
56 verbose chmod /Users/scottcorgan/.npm/injector/0.1.8/package.tgz 644
57 verbose chown /Users/scottcorgan/.npm/injector/0.1.8/package.tgz [ 501, 20 ]
58 silly lockFile 3a52ce78- .
59 silly publish { name: 'injector',
59 silly publish   version: '0.1.8',
59 silly publish   main: 'injector.js',
59 silly publish   description: 'Basic dependency injection for Nodejs.',
59 silly publish   dependencies: { walk: '~2.2.1' },
59 silly publish   readme: '# Injector\n\nBasic dependency injection for Nodejs.\n\nAnd when I say basic, I mean basic. The idea with building this module was to create an open, flexible module system and not enforce new structures and coding styles.\n\n## Installation\n\n```\nnpm install injector\n```\n\n## Usage\n\n### Setup\n\nThis is where the application is set up (or bootstrapped). It is most likely going to exist before any kind of server or database connection.\n\n```javascript\n\n// Require modules\n\nvar Injector = require(\'injector\');\nvar path = require(\'path\');\n\n// Set up our application\n\nvar app = Injector.create(\'OurApplication\', {\n    \n    // This is the directory where are modules will live\n  \n    directory: path.join(__dirname, \'modules\'), // this would be ./modules\n    \n    // This is an array of all directories to ignore\n    \n    exclude: [\'modules/models\'] // this would be ./modules/models\n});\n```\n\n\n### A Basic Module\n\nAll module files must start with a basic Nodejs ` module.exports ` and be housed within a ` funciton (app) {} `. The ` app ` variable is our injector object. From this, we can register our modules. A module export wil have no more and no less than the one argument ` app `.\n\nA module in a module file will only be bootstrapped if in the folder specified in the ` directory: ` value *(See [Setup](https://github.com/scottcorgan/Injector/blob/master/README.md#setup))*.\n\n```javascript\nmodule.exports = function (app) {\n    \n    // Some basic private stuff here ...\n    \n    // Declare our module here\n    \n    app.module(\'SomeModule\', function (ModuleToInject) {\n        \n        return {\n            someApiMethod: function () {\n                \n                console.log(ModuleToInject.value1);\n                \n            }\n        }\n    });\n    \n    // Modules can be functions, objects, or basic values\n    \n    app.module(\'ModuleToInject\', {\n        value1: \'value1\',\n        value2: \'value2\'\n    });\n    \n};\n```\n\n## API\n\nThere are 2 available API methods for registering a module.\n\n### module(Name, Value)\n* **Name:** The name of our module\n* **Value:** The value of our module. This can be a function, an object, or a basic value (string, number, etc.)\n\n##### Example\n```javascript\n\n// Function module defintion\n\napp.module(\'SomeModule\', function () {\n    // Do stuff here ...\n});\n\n// Object module definition\n\napp.module(\'SomeObjectModule\', {\n    value1: \'value1\'\n    // etc.\n});\n\n// Value module definition\n\napp.module(\'SomeValueModule\', \'This sentence is useless ... maybe.\');\n\n```\n\n* * *\n\n### constant(Name, Value)\n* **Name:** The name of our constant\n* **Value:** The value of our constant. This can be a function, an object, or a basic value (string, number, etc.), **BUT** constants cannot receive injected dependencies.\n\nConstants are basically simplified modules. The reason this is in the API is for readability. ` app.constant ` is only a modified wrapper on top of ` app.module `.\n\n##### Example\n```javascript\n\n// Basic constant difinition\n\napp.constant(PI, 3.14159);\n\n```\n',
59 silly publish   readmeFilename: 'README.md',
59 silly publish   _id: 'injector@0.1.8',
59 silly publish   dist: { shasum: '4c8232fafd5d2aac56f361e2804d26c6be269f7e' } }
60 verbose url raw injector
61 verbose url resolving [ 'https://registry.npmjs.org/', './injector' ]
62 verbose url resolved https://registry.npmjs.org/injector
63 info trying registry request attempt 1 at 12:48:44
64 http PUT https://registry.npmjs.org/injector
65 http 409 https://registry.npmjs.org/injector
66 verbose url raw injector
67 verbose url resolving [ 'https://registry.npmjs.org/', './injector' ]
68 verbose url resolved https://registry.npmjs.org/injector
69 info trying registry request attempt 1 at 12:48:44
70 http GET https://registry.npmjs.org/injector
71 http 200 https://registry.npmjs.org/injector
72 error publish fail Cannot publish over existing version.
72 error publish fail Bump the 'version' field, set the --force flag, or
72 error publish fail     npm unpublish 'injector@0.1.8'
72 error publish fail and try again
73 error System Darwin 12.2.0
74 error command "node" "/usr/local/bin/npm" "publish" "."
75 error cwd /Users/scottcorgan/Projects/nodejs/Injector
76 error node -v v0.8.16
77 error npm -v 1.1.69
78 error code EPUBLISHCONFLICT
79 verbose exit [ 1, true ]
